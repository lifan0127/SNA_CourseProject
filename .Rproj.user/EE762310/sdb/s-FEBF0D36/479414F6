{
    "contents" : "---\ntitle: 'SNA Project: Vegetables and Nutrients Network'\noutput: word_document\n---\n\nIn this project, we aim to analyze the the connections between various vegetables and their nutrient contents. A list of vegetables and descriptions of their health benefits was obtained from [http://www.nutrition-and-you.com](http://www.nutrition-and-you.com/vegetable-nutrition.html). Based on this information, we apply statistics and network analysis to investigate the correlation and the basic workflow is as follows:\n\n1. Parse the informatin from the website.\n2. Use text mining to extract key nutrients.\n3. Perform statistics and network analysis on the data set.\n\nThis report is composed using [RMarkdown](http://rmarkdown.rstudio.com/). All the R/RMD codes and dataset for this SNA project can be found on Github: [https://github.com/lifan0127/SNA_CourseProject](https://github.com/lifan0127/SNA_CourseProject).\n\n*If you are not familiar with RMarkdown style or programming, you can safely skip all the code chunks (shaded sections) and focus on the results and discussion only.*\n\n```{r preparation, message=FALSE, warning=FALSE}\nlibrary(tm)\nlibrary(knitr)\nlibrary(stringr)\nlibrary(RWeka)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(igraph)\nlibrary(dplyr)  # version 0.3 required\n\n# Load \"vegetables\" data frame from vegetable.RData\nload(\"data/vegetables.RData\")\n\n```\n\n\n### Parse the informatin from the website\n\nThe data was parsed from [http://www.nutrition-and-you.com](http://www.nutrition-and-you.com/vegetable-nutrition.html) using the *RCurl* and *XML* packages in R. The script can be found in the [Github reposity](https://github.com/lifan0127/SNA_CourseProject) associated with this project. The basic steps includes:\n\n1. Parse vegetable names, images and links from [http://www.nutrition-and-you.com/vegetable-nutrition.html](http://www.nutrition-and-you.com/vegetable-nutrition.html).\n2. Following the links, parse the health benefits for each vegetable.\n3. Manual check to confirm consistency.\n\nA sample of the data (first 5 vegetables) is shown below:\n\n```{r results='asis'}\nkable(vegetables[1:5, c(\"img\", \"Name\", \"Link\")])\n\n```\n\n\n\n### Define Nutrient Terms via Text Mining\n\nThe first task was to determine the most important nutrient terms asssociated with vegetables. Herein we used the frequencies of terms appearing in the health benefit description as the measure. First, we computed the frequency distribution of all term, 2-gram, 3-gram and 4-grams using the *tm* and *RWeka* packages in R.\n\n```{r data_preprocessing}\ncorpus.preprocess <- function(corpus){\n  # Helper function to preprocess corpus\n  processed.corpus <- corpus %>%\n    tm_map(content_transformer(tolower)) %>%\n    tm_map(removeNumbers) %>%\n    tm_map(removePunctuation) %>%\n    tm_map(removeWords, stopwords(\"english\")) %>%\n    tm_map(stripWhitespace)\n  return(processed.corpus)\n}\n\ncorpus <- VCorpus(DirSource(\"text\")) %>% corpus.preprocess()\n\ndtm <- DocumentTermMatrix(corpus) \n\ntwogramTokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 2, max = 2))\ndtm.2g <- DocumentTermMatrix(corpus, control=list(tokenize = twogramTokenizer))\n\nthreegramTokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 3, max = 3))\ndtm.3g <- DocumentTermMatrix(corpus, control=list(tokenize = threegramTokenizer)) \n\nfourgramTokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 4, max = 4))\ndtm.4g <- DocumentTermMatrix(corpus, control=list(tokenize = fourgramTokenizer)) \n\n```\n\nBelow we plotted the top 20 most frequnt terms and [n-grams](http://en.wikipedia.org/wiki/N-gram) (contiguous sequence of n words). We limited our analysis to n=2~4 as it becomes unlikely to have concepts represented by more than 4 words.\n\n```{r term_frequency, fig.width=6.5, fig.height=3, dpi=300}\nmost.freq <- function(dtm, n=20){\n  # Helper function to find the most frequent n words\n  freq <- colSums(as.matrix(dtm))\n  result <- freq[order(freq, decreasing=TRUE)][1:n]\n  return(data_frame(term=names(result), count=result))\n}\n\nggplot(most.freq(dtm, 20), aes(x=reorder(term, -count), y=count)) +\n  geom_bar(stat=\"identity\") +\n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Most frequent words in health benefits\")\n\nggplot(most.freq(dtm.2g, 20), aes(x=reorder(term, -count), y=count)) +\n  geom_bar(stat=\"identity\") +\n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Most frequent 2-gram in health benefits\")\n\nggplot(most.freq(dtm.3g), aes(x=reorder(term, -count), y=count)) +\n  geom_bar(stat=\"identity\") +\n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Most frequent 3-gram in health benefits\")\n\nggplot(most.freq(dtm.4g), aes(x=reorder(term, -count), y=count)) +\n  geom_bar(stat=\"identity\") +\n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Most frequent 4-gram in health benefits\")\n\n```\n\nThen, we manually examined those terms and chose the most frequent, heal-related nutrient concepts from the data. Further, we built a alias list to combine terms belonging to the same concepts (e.g. pyridoxine, folic acid, niacin and thiamin all belong to Vitamin B family). Finally, we performed some additional clean-up. For example, manually changing \"VitaminC\" to \"Vitamin C\" etc.\n\n```{r term_selection}\nterms <- c(\"Antioxidant\", \"Potassium\", \"Manganese\", \"Iron\", \"Copper\", \"Calcium\",\n           \"Niacin\", \"Carotenes\", \"Carotenoid\", \"Flavonoid\", \"Sodium\", \"Magnesium\",\n           \"Vitamin C\", \"Vitamin B\", \"Dietary Fiber\", \"Pantothenic Acid\",\n           \"Vitamin K\")\n\nalias <- c(Pyridoxine=\"Vitamin B\", Folates=\"Vitamin B\", \"Folic Acid\"=\"Vitamin B\", Thiamin=\"Vitamin B\", riboflavin=\"Vitamin B\", \"Superoxide dismutase\"=\"Antioxidant\", VitaminC=\"Vitamin C\", Zeaxanthin=\"Carotenoid\", Lutein=\"Carotenoid\")\n\n# Creat a new dtm containing all 1-4 grams and subset with terms/alias\naliasTrans <- content_transformer(function(x, alias) {\n    for(i in 1:length(alias))\n      x <- gsub(tolower(names(alias[i])), tolower(alias[i]), x)\n    return(x)\n  })\nnew.corpus <- tm_map(corpus, aliasTrans, alias)\ntokenizer <- function(x) NGramTokenizer(x, Weka_control(min = 1, max = 4))\ndtm.all <- DocumentTermMatrix(new.corpus, control=list(tokenize = tokenizer)) \ndtm.trimmed <- dtm.all[, tolower(terms)]\n\n```\n\nAfterwards, we filtered the document-term matrix using the terms and alias and the resulting new matrix contains 17 nutrient terms. \n\n\n\n### Construct Vegetable-Nutrient Pairs and Network\n\nThereafter, we used the term list to build vegetable-nutrient pairs. Each pair, formed if a nutrient was mentioned in the health benefit description of a vegetable, represents that the vegetable is a good/significant source of the particular nutrient. The vegetable-nutrient pairs collectively constitute a directed graph structure that was used for the subsequent network analysis.\n\n```{r vegetable_nutrient_network}\nvegetable.nutrient <- as.data.frame(as.matrix(dtm.trimmed)) %>%\n  mutate(Vegetable=vegetables$Name) %>%\n  melt(id=\"Vegetable\", variable.name=\"Nutrient\", value.name=\"Count\") %>%\n  filter(Count>0) \n\n```\n\n\n\n### Visualization of the Vegetable-Nutrient Network\n\nThe following plot illustrates the connections between vegetables and the nutrients they supplies. Each vegetable and nutrient are represented by a node (with different colors) and the relationship are represented by a directed edge.\n\n```{r network_analysis, dpi=300}\n\ng <- graph.data.frame(vegetable.nutrient)\n\nV(g)$color <- ifelse(tolower(V(g)$name) %in% tolower(vegetables$Name), \"#50d956\", \"#eea43a\")\nV(g)$size <- sqrt(degree(g))*2\n\npar(mar=c(0.1, 0.1, 0.1, 0.1))\npng(file=\"image/network.png\")  # has color issue in knitr\nset.seed(1)\nplot(g, layout=layout.fruchterman.reingold, edge.arrow.size=0.5)\ndev.off()\n\n```\n\n![network graph](image/network2.png)\n\n\n### Results and Discussion\n\nSome discussion about this network:\n\n* The trimmed document term matrix has a sparsity of only 32%, which suggests on average each vegetable supplies ~68% kinds of nutrients identified in this study. \n* In deed, we found each vegetable supplies about 10 types of nutrients, in which the top three vegetables are Asparagus, Artichoke and Brussel sprouts.\n* On the other hand, each nutrient are available from several vegetables, in which the most available nutrients are Vitamin B, Iron and Antioxidant.\n* Because this is a [bipartite graph](http://en.wikipedia.org/wiki/Bipartite_graph), concepts such as clique and clustering are largely not applicable.\n\n```{r fig.width=6.5, fig.height=3, dpi=300}\nvegetable.nutrient %>%\n  group_by(Vegetable) %>%\n  summarize(Nutrient.type=n()) %>%\n  ggplot(aes(x=reorder(Vegetable, -Nutrient.type), y=Nutrient.type)) +\n  geom_bar(stat=\"identity\") + \n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Type of nutrients supplied by vegetables\")\n\nvegetable.nutrient %>%\n  group_by(Nutrient) %>%\n  summarize(Vegetable.type=n()) %>%\n  ggplot(aes(x=reorder(Nutrient, -Vegetable.type), y=Vegetable.type)) +\n  geom_bar(stat=\"identity\") + \n  theme_bw() +\n  theme(axis.title.x = element_blank(),\n           axis.text.x  = element_text(angle=45, hjust=1)) +\n  ggtitle(\"Nutrient availability from multiple vegetables\")\n",
    "created" : 1416800859262.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1736615896",
    "id" : "479414F6",
    "lastKnownWriteTime" : 1416836043,
    "path" : "~/GitHub/SNA_CourseProject/SNA_Project.Rmd",
    "project_path" : "SNA_Project.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}