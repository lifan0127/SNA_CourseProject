{
    "contents" : "# Parse txt and images from the source \n\nlibrary(RCurl)\nlibrary(XML)\nlibrary(stringr)\nlibrary(dplyr) # version 0.3 required\n\n# Information source (Â© copyright 2009-14 By Umesh Rudrappa)\nhtml <- htmlParse(\"http://www.nutrition-and-you.com/vegetable-nutrition.html\")\n\n\n# Parse vegetable list\nxpath.list <- \"//h4[contains(., 'Here\\r\\nis an impressive')]/following::div[@class='desktopOnly'][1]/table[1]//td\"\n\nvegetables <- html %>%\n  xpathSApply(xpath.list, xmlChildren) %>%\n  lapply(function(x){\n    while(\"text\" %in% names(x)) \n      x$text <- NULL  # Remove extra \"text\" nodes\n    name <- xmlValue(x[[2]]) %>% str_replace_all(\"\\r\\n|\\\\s+\", \"_\")\n    link <- xmlGetAttr(x[[2]], \"href\")\n    if(is.null(link))\n      link <- xmlGetAttr(xmlChildren(x[[2]])[[1]], \"href\")\n    image <- xmlGetAttr(x[[1]], \"src\")\n    if(is.null(image))\n      image <- xmlGetAttr(xmlChildren(x[[1]])[[1]], \"src\")\n    return(data_frame(Name=name, Link=link, Image=image))\n  }) %>% rbind_all()\n\nsave(vegetables, file=\"data/vegetables.RData\")\n\n\n# Parse vegetable images\napply(vegetables, 1, function(x){\n  download.file(x[[\"Image\"]], paste0(\"image/\", x[[\"Name\"]], \".gif\"), mode=\"wb\")\n  })\n\n\n# Parse vegetable benefit descriptions\nxpath.item <- \"//h3[contains(., 'Health')]/following::ul[1]/li\"\n\napply(vegetables, 1, function(x){\n  txt <- xpathSApply(htmlParse(x[[\"Link\"]]), xpath.item, xmlValue) %>% \n    str_replace_all(\"\\r\\n\", \" \") %>%\n    str_trim()\n  fileConn <- file(paste0(\"text/\", x[[\"Name\"]], \".txt\"))\n  writeLines(txt, fileConn)\n  close(fileConn)\n})\n\n",
    "created" : 1416788122496.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2931104815",
    "id" : "7B44EF05",
    "lastKnownWriteTime" : 1416805642,
    "path" : "~/GitHub/SNA_CourseProject/R/html_parser.R",
    "project_path" : "R/html_parser.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}